"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPreviewing = isPreviewing;
exports.clearPreview = clearPreview;
exports.PrimeLink = PrimeLink;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _apolloLinkHttp = require("apollo-link-http");

var _apolloLinkContext = require("apollo-link-context");

var browser = typeof window !== 'undefined';
var storage = new Map();
var localStorage = browser ? window.localStorage : {
  getItem: function getItem(key) {
    return storage.get(key);
  },
  setItem: function setItem(key, value) {
    return storage.set(key, value);
  },
  removeItem: function removeItem(key) {
    return storage.delete(key);
  }
};

var getQuery = function getQuery() {
  if (browser) {
    return window.location.search.substr(1).split('&').reduce(function (acc, item) {
      var _item$split$map = item.split('=').map(decodeURIComponent),
          _item$split$map2 = (0, _slicedToArray2.default)(_item$split$map, 2),
          key = _item$split$map2[0],
          value = _item$split$map2[1];

      acc[key] = value;
      return acc;
    }, {});
  }

  return {};
};

function isPreviewing() {
  return getQuery()['prime.id'] || !!localStorage.getItem('prime.preview');
}

function clearPreview() {
  if (browser) {
    localStorage.removeItem('prime.refreshToken');
    localStorage.removeItem('prime.accessToken');
    localStorage.removeItem('prime.preview');
    document.cookie = 'prime.refreshToken=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
    document.cookie = 'prime.accessToken=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
    document.cookie = 'prime.preview=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
    window.location.reload();
  }
}

function PrimeLink(_ref) {
  var url = _ref.url,
      accessToken = _ref.accessToken,
      linkResolver = _ref.linkResolver,
      _ref$cookies = _ref.cookies,
      cookies = _ref$cookies === void 0 ? {} : _ref$cookies,
      _ref$ssrMode = _ref.ssrMode,
      ssrMode = _ref$ssrMode === void 0 ? false : _ref$ssrMode;
  var primeLink = (0, _apolloLinkContext.setContext)(
  /*#__PURE__*/
  function () {
    var _ref2 = (0, _asyncToGenerator2.default)(
    /*#__PURE__*/
    _regenerator.default.mark(function _callee(request, options) {
      var extra, query, previewUrl, res;
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              extra = (0, _objectSpread2.default)({}, accessToken ? {
                'x-prime-token': accessToken
              } : {});
              query = getQuery(); // client handling

              if (!browser) {
                _context.next = 23;
                break;
              }

              if (!query['prime.id']) {
                _context.next = 21;
                break;
              }

              previewUrl = "".concat(url, "/prime/preview?id=").concat(query['prime.id']);
              _context.next = 7;
              return fetch(previewUrl, {
                credentials: 'include'
              }).then(function (r) {
                return r.json();
              });

            case 7:
              res = _context.sent;
              document.cookie = 'prime.refreshToken=' + res.refreshToken;
              document.cookie = 'prime.accessToken=' + res.accessToken;
              document.cookie = 'prime.preview=' + query['prime.id'];
              localStorage.setItem('prime.refreshToken', res.refreshToken);
              localStorage.setItem('prime.accessToken', res.accessToken);
              localStorage.setItem('prime.preview', query['prime.id']);
              extra['x-prime-token'] = res.accessToken;
              extra['x-prime-preview'] = query['prime.id'];

              if (!ssrMode) {
                _context.next = 21;
                break;
              }

              if (!(typeof linkResolver === 'function')) {
                _context.next = 20;
                break;
              }

              window.location = linkResolver(res.document, res.schema);
              return _context.abrupt("return");

            case 20:
              window.location = '/';

            case 21:
              if (localStorage.getItem('prime.accessToken')) {
                extra['x-prime-token'] = localStorage.getItem('prime.accessToken');
              }

              if (localStorage.getItem('prime.preview')) {
                extra['x-prime-preview'] = localStorage.getItem('prime.preview');
              }

            case 23:
              // server side handling of cookies
              if (cookies && cookies['prime.accessToken']) {
                extra['x-prime-token'] = cookies['prime.accessToken'];
              }

              if (cookies && cookies['prime.preview']) {
                extra['x-prime-preview'] = cookies['prime.preview'];
              }

              return _context.abrupt("return", {
                headers: (0, _objectSpread2.default)({}, options.headers, extra)
              });

            case 26:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    }));

    return function (_x, _x2) {
      return _ref2.apply(this, arguments);
    };
  }());
  var httpLink = new _apolloLinkHttp.HttpLink({
    uri: "".concat(url, "/graphql"),
    useGETForQueries: true
  });
  return primeLink.concat(httpLink);
}